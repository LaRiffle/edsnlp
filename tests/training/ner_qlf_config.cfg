[nlp]
lang = "fr"
pipeline = [
    "normalizer",
    "sentencizer",
    "embedding",
    "ner",
    "qualifier",
    ]
batch_size = 2
components = ${components}
tokenizer = {"@tokenizers": "eds.tokenizer"}

[components.normalizer]
@factory = "eds.normalizer"

[components.sentencizer]
@factory = "eds.sentences"

[components.embedding]
@factory = "eds.text_cnn"
kernel_sizes = [3]

[components.embedding.embedding]
@factory = "eds.transformer"
model = "hf-internal-testing/tiny-bert"
window = 128
stride = 96

[components.ner]
@factory = "eds.ner_crf"
mode = "joint"
embedding = ${components.embedding}
target_span_getter = ${vars.ml_span_groups}
span_setter = [ "ents" ]
infer_span_setter = true

[components.qualifier]
@factory = "eds.span_qualifier"
qualifiers = { "_.negation": [ "sosy" ], "_.unit": [ "measure" ] }

[components.qualifier.embedding]
@factory = "eds.span_pooler"
embedding = ${components.embedding}
span_getter = ${components.ner.target_span_getter}

[scorer.ner.exact_ner]
@scorers= "eds.ner_exact_scorer"
span_getter = ${components.ner.target_span_getter}

[scorer.qualifier.qualifier]
@scorers= "eds.span_classification_scorer"
span_getter = ${components.ner.target_span_getter}
qualifiers = ${components.qualifier.qualifiers}

[vars]
train = "dataset"
dev = "dataset"
ml_span_groups = ["sosy", "measure"]

[train]
nlp = ${nlp}
train_data = {"@misc": "brat_dataset", "path": ${vars.train}}
val_data = {"@misc": "brat_dataset", "path": ${vars.dev}}
max_steps = 20
validation_interval = ${train.max_steps//10}
warmup_rate = 0
batch_size = 80 words
lr = 3e-3
scorer = ${scorer}
